<snippet>
  <content><![CDATA[
${1:/**
 * Problem: ${2:$TM_FILENAME}
 * Author: babhishek21
 * Lang: C++11
 */

}#include <bits/stdc++.h> // using GCC/G++
// #include "custom/prettyprint.hpp" // C++11 only
using namespace std;

${3:static const int MOD = 1000000007;
static const int INF = 0x3f3f3f3f;
static const long long INFLL = 0x3f3f3f3f3f3f3f3fLL;
#define pb push_back
#define eb emplace_back
#define mp make_pair

#define debug(x) cerr << #x << " : " << x << endl;
#define whole(func, x, ...) ([&](decltype((x)) var) \{ return (func)(begin(var), end(var), ##__VA_ARGS__); \})(x)


}int main() {
  // ios_base::sync_with_stdio(false); // for fast I/O

  ${0:$SELECTION}

  return 0;
}
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>comp</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>source.c, source.cpp, source.c++</scope>
  <!-- Optional: Description to show in the menu -->
  <description>Minimalist Competitive Programming Snippet for C++ by babhishek21</description>
</snippet>
